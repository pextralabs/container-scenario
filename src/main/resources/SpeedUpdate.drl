package co.pextra.scenarios.SensitiveProductStorage;

import java.util.List;
import java.util.Date;
import co.pextra.model.*
import java.util.ArrayList
import java.lang.Double;

rule SpeedUpdate
    no-loop
    when
        speed: Speed(bearer: bearer)
        readings: List() from accumulate(
                gpsReading: GPSReading(bearer == bearer) over window:time( 2m ),
                collectList(gpsReading)
        )
    then
        if (readings.size() < 2) speed.setValue(new Double(0));
        else {
            ArrayList<Double> speeds = new ArrayList<>();
            for(int i = 0; i < readings.size() - 1; i++) {
                GPSReading curr = (GPSReading) readings.get(i);
                GPSReading next = (GPSReading) readings.get(i + 1);
                double ds = Location.distance(next, curr);
                long dt = (next.getExecutionTime().getTime() - curr.getExecutionTime().getTime()) / 1000;
                speeds.add(ds/dt);
            }
            Double avg = speeds.stream().reduce(0.0, (a, b) -> a + b) / speeds.size();
            speed.setValue(Math.round(avg*100.0)/100.0);
        }
        update(speed);
    end