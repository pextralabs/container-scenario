package co.pextra.scenarios.SensitiveProductStorage2;

import java.util.List
import co.pextra.model2.Reading
import java.lang.Double;

rule IntrinsicContextUpdate2
    no-loop
    when
        entity: co.pextra.model2.Entity()
        intrinsicContext: co.pextra.model2.IntrinsicContext(bearer == entity)
        reading: co.pextra.model2.Reading(entityID == entity.id, contextID == intrinsicContext.id)
    then
        intrinsicContext.setReading(reading);
        update(intrinsicContext);
    end


rule SpeedReading2
    no-loop
    when
        location: Location(bearer: bearer)
        Person(this == bearer, speed: speed)
        readings: List() from accumulate(
                reading: co.pextra.model2.Reading(entityID == bearer.id, contextID == location.id) over window:time( 2m ),
                collectList(reading)
        )
    then
        Reading<Double> reading = new Reading<>(Speed.computeSpeed(readings), bearer.getId(), speed.getId());
        insert(reading);
    end